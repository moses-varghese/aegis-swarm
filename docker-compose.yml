version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # Limit memory usage for development
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - aegis_net

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.9
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - aegis_net

  fluentd:
    build: ./fluentd
    container_name: fluentd
    volumes:
      - ./fluentd/conf:/fluentd/etc
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    depends_on:
      - elasticsearch
    networks:
      - aegis_net
  

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
  training:
    build: ./backend
    command: python app/ml/train.py
    volumes:
      - model-data:/app/app/ml

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - model-data:/app/app/ml
    env_file:
      - ./backend/.env
    healthcheck:
      test: ["CMD", "python", "healthcheck.py"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      training:
        condition: service_completed_successfully
      redis:
        condition: service_started
    networks:
      - aegis_net
    logging: # NEW: Send logs to Fluentd
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.backend

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
    environment:
      - WDS_SOCKET_PORT:0
    depends_on:
      - backend
    networks:
      - aegis_net
    logging: # NEW: Send logs to Fluentd
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.backend

  swarm-simulator:
    build: ./backend
    command: python swarm_launcher.py
    volumes:
      - .:/app
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - aegis_net
    logging: # NEW: Send logs to Fluentd
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.backend
networks:
  aegis_net:
    driver: bridge

volumes:
  esdata:
    driver: local
  model-data:
